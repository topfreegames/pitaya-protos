syntax = "proto3";
package protos;
option csharp_namespace = "NPitaya.Protos";
option go_package = "github.com/topfreegames/pitaya/pkg/protos";

import "error.proto";
import "push.proto";
import "kick.proto";
import "msg.proto";
import "response.proto";
import "request.proto";
import "google/protobuf/empty.proto";

// TODO split messages into their own protos

message Server {
  string id = 1;
  bool frontend = 2;
  string type = 3;
  map<string, string> metadata = 4;
  string hostname = 5;
  // TODO
}

message SDEvent {
  enum Event{
    ADD = 0;
    REMOVE = 1;
  }
  Event event = 1;
  Server server = 2;
}

message StartPitayaRequest {
  Server config = 1;
  bool shouldCompressMessages = 2;
  bool debugLog = 3;
  // rpc module
}

message RequestTo{
  string serverID = 1;
  Msg msg = 2;
}

message RPCResponse{
  uint64 reqId = 1;
  Response res = 2;
  Error err = 3;
}

message SidecarRequest{
  uint64 reqId = 1;
  Request req = 2;
}

message PushRequest{
  // TODO I think this field is not needed if we use nats only
  string frontendType = 2;
  Push push = 3;
}

message PushResponse {
  repeated string failedUids = 1;
  bool hasFailed = 2;
}

message KickRequest{
  string frontendType = 2;
  KickMsg kick = 3;
}

service Sidecar {
  rpc GetServer(Server) returns (Server);
  rpc Heartbeat(google.protobuf.Empty) returns(google.protobuf.Empty);
  rpc ListenRPC(stream RPCResponse) returns (stream SidecarRequest);
  rpc ListenSD(google.protobuf.Empty) returns (stream SDEvent);
  rpc SendRPC(RequestTo) returns (Response);
  rpc SendPush(PushRequest) returns (PushResponse);
  rpc SendKick(KickRequest) returns (PushResponse);
  rpc StartPitaya(StartPitayaRequest) returns (Error);
  rpc StopPitaya(google.protobuf.Empty) returns (Error);
  // AddRoute
}
